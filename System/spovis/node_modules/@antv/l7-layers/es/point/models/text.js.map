{"version":3,"sources":["../../../src/point/models/text.ts"],"names":["AttributeType","gl","boundsContains","padBounds","rgb2arr","BaseModel","CollisionIndex","calculteCentroid","getGlyphQuads","shapeText","TextTriangulation","feature","centroid","glyphQuads","vertices","indices","coord","length","forEach","quad","index","push","tex","x","y","height","tl","width","tr","br","bl","size","TextModel","texture","glyphInfo","currentZoom","extent","textureHeight","preTextStyle","glyphInfoMap","layer","getLayerConfig","opacity","stroke","strokeWidth","strokeOpacity","textAnchor","textAllowOverlap","canvas","fontService","updateTexture","u_opacity","u_stroke_opacity","u_sdf_map","u_stroke","u_halo_blur","u_sdf_map_size","u_strokeWidth","textExtent","initGlyph","filterGlyphs","buildLayerModel","moduleName","vertexShader","textVert","fragmentShader","textFrag","triangulation","depth","enable","blend","getBlend","zoom","mapService","getZoom","getBounds","flag","Math","abs","models","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","buffer","usage","STATIC_DRAW","data","FLOAT","update","featureIdx","vertex","attributeIdx","DYNAMIC_DRAW","Array","isArray","bounds","fontWeight","fontFamily","getEncodedData","characterSet","item","shape","toString","char","indexOf","setFontOptions","mapping","spacing","textOffset","map","coordinates","id","shaping","padding","setEncodedData","rendererService","getViewportSize","collisionIndex","filterData","filter","fontScale","pixels","lngLatToContainer","placeCollisionBox","x1","left","x2","right","y1","top","y2","bottom","anchorPointX","anchorPointY","box","insertCollisionBox","initTextFont","generateGlyphLayout","createTexture2D"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  BlendType,\n  gl,\n  IEncodeFeature,\n  ILayer,\n  ILayerConfig,\n  IModel,\n  IModelUniform,\n  ITexture2D,\n} from '@antv/l7-core';\nimport { boundsContains, padBounds, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from '../../core/BaseModel';\nimport CollisionIndex from '../../utils/collision-index';\nimport { calculteCentroid } from '../../utils/geo';\nimport {\n  getGlyphQuads,\n  IGlyphQuad,\n  shapeText,\n} from '../../utils/symbol-layout';\nimport textFrag from '../shaders/text_frag.glsl';\nimport textVert from '../shaders/text_vert.glsl';\ninterface IPointTextLayerStyleOptions {\n  opacity: number;\n  textAnchor: string;\n  spacing: number;\n  padding: [number, number];\n  stroke: string;\n  strokeWidth: number;\n  strokeOpacity: number;\n  fontWeight: string;\n  fontFamily: string;\n  textOffset: [number, number];\n  textAllowOverlap: boolean;\n}\nexport function TextTriangulation(feature: IEncodeFeature) {\n  const centroid = feature.centroid as number[]; // 计算中心点\n  const { glyphQuads } = feature;\n  const vertices: number[] = [];\n  const indices: number[] = [];\n  const coord =\n    centroid.length === 2 ? [centroid[0], centroid[1], 0] : centroid;\n  glyphQuads.forEach((quad: IGlyphQuad, index: number) => {\n    vertices.push(\n      ...coord,\n      quad.tex.x,\n      quad.tex.y + quad.tex.height,\n      quad.tl.x,\n      quad.tl.y,\n      ...coord,\n      quad.tex.x + quad.tex.width,\n      quad.tex.y + quad.tex.height,\n      quad.tr.x,\n      quad.tr.y,\n      ...coord,\n      quad.tex.x + quad.tex.width,\n      quad.tex.y,\n      quad.br.x,\n      quad.br.y,\n      ...coord,\n      quad.tex.x,\n      quad.tex.y,\n      quad.bl.x,\n      quad.bl.y,\n    );\n    indices.push(\n      0 + index * 4,\n      1 + index * 4,\n      2 + index * 4,\n      2 + index * 4,\n      3 + index * 4,\n      0 + index * 4,\n    );\n  });\n  return {\n    vertices, // [ x, y, z, tex.x,tex.y, offset.x. offset.y]\n    indices,\n    size: 7,\n  };\n}\n\nexport default class TextModel extends BaseModel {\n  private texture: ITexture2D;\n  private glyphInfo: IEncodeFeature[];\n  private currentZoom: number = -1;\n  private extent: [[number, number], [number, number]];\n  private textureHeight: number = 0;\n  private preTextStyle: Partial<IPointTextLayerStyleOptions> = {};\n  private glyphInfoMap: {\n    [key: string]: {\n      shaping: any;\n      glyphQuads: IGlyphQuad[];\n      centroid: number[];\n    };\n  } = {};\n\n  public getUninforms(): IModelUniform {\n    const {\n      opacity = 1.0,\n      stroke = '#fff',\n      strokeWidth = 0,\n      strokeOpacity = 1,\n      textAnchor = 'center',\n      textAllowOverlap = true,\n    } = this.layer.getLayerConfig() as IPointTextLayerStyleOptions;\n    const { canvas } = this.fontService;\n    if (canvas.height !== this.textureHeight) {\n      this.updateTexture();\n    }\n    this.preTextStyle = {\n      textAnchor,\n      textAllowOverlap,\n    };\n    return {\n      u_opacity: opacity,\n      u_stroke_opacity: strokeOpacity,\n      u_sdf_map: this.texture,\n      u_stroke: rgb2arr(stroke),\n      u_halo_blur: 0.5,\n      u_sdf_map_size: [canvas.width, canvas.height],\n      u_strokeWidth: strokeWidth,\n    };\n  }\n\n  public buildModels(): IModel[] {\n    this.extent = this.textExtent();\n    const {\n      textAnchor = 'center',\n      textAllowOverlap = true,\n    } = this.layer.getLayerConfig() as IPointTextLayerStyleOptions;\n    this.preTextStyle = {\n      textAnchor,\n      textAllowOverlap,\n    };\n    this.initGlyph();\n    this.updateTexture();\n    this.filterGlyphs();\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'pointText',\n        vertexShader: textVert,\n        fragmentShader: textFrag,\n        triangulation: TextTriangulation,\n        depth: { enable: false },\n        blend: this.getBlend(),\n      }),\n    ];\n  }\n  public needUpdate() {\n    const {\n      textAllowOverlap = false,\n    } = this.layer.getLayerConfig() as IPointTextLayerStyleOptions;\n    // textAllowOverlap 发生改变\n    const zoom = this.mapService.getZoom();\n    const extent = this.mapService.getBounds();\n    const flag = boundsContains(this.extent, extent);\n    // 文本不能压盖则进行过滤\n    if (\n      (!textAllowOverlap && (Math.abs(this.currentZoom - zoom) > 1 || !flag)) ||\n      textAllowOverlap !== this.preTextStyle.textAllowOverlap\n    ) {\n      this.filterGlyphs();\n      this.layer.models = [\n        this.layer.buildLayerModel({\n          moduleName: 'pointText',\n          vertexShader: textVert,\n          fragmentShader: textFrag,\n          triangulation: TextTriangulation,\n          depth: { enable: false },\n          blend: this.getBlend(),\n        }),\n      ];\n      return true;\n    }\n    return false;\n  }\n\n  protected registerBuiltinAttributes() {\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'textOffsets',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_textOffsets',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[5], vertex[6]];\n        },\n      },\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size } = feature;\n          return Array.isArray(size) ? [size[0]] : [size as number];\n        },\n      },\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'textUv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_tex',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[3], vertex[4]];\n        },\n      },\n    });\n  }\n  private textExtent(): [[number, number], [number, number]] {\n    const bounds = this.mapService.getBounds();\n    return padBounds(bounds, 0.5);\n  }\n  /**\n   * 生成文字纹理\n   */\n  private initTextFont() {\n    const {\n      fontWeight = '800',\n      fontFamily = 'sans-serif',\n    } = this.layer.getLayerConfig() as IPointTextLayerStyleOptions;\n    const data = this.layer.getEncodedData();\n    const characterSet: string[] = [];\n    data.forEach((item: IEncodeFeature) => {\n      let { shape = '' } = item;\n      shape = shape.toString();\n      for (const char of shape) {\n        // 去重\n        if (characterSet.indexOf(char) === -1) {\n          characterSet.push(char);\n        }\n      }\n    });\n    this.fontService.setFontOptions({\n      characterSet,\n      fontWeight,\n      fontFamily,\n    });\n  }\n  /**\n   * 生成文字布局\n   */\n  private generateGlyphLayout() {\n    // TODO:更新文字布局\n    const { mapping } = this.fontService;\n    const {\n      spacing = 2,\n      textAnchor = 'center',\n      textOffset,\n    } = this.layer.getLayerConfig() as IPointTextLayerStyleOptions;\n    const data = this.layer.getEncodedData();\n    this.glyphInfo = data.map((feature: IEncodeFeature) => {\n      const { shape = '', coordinates, id } = feature;\n      const shaping = shapeText(\n        shape.toString(),\n        mapping,\n        24,\n        textAnchor,\n        'center',\n        spacing,\n        textOffset,\n      );\n      const glyphQuads = getGlyphQuads(shaping, textOffset, false);\n      feature.shaping = shaping;\n      feature.glyphQuads = glyphQuads;\n      feature.centroid = calculteCentroid(coordinates);\n      if (id) {\n        this.glyphInfoMap[id] = {\n          shaping,\n          glyphQuads,\n          centroid: calculteCentroid(coordinates),\n        };\n      }\n      return feature;\n    });\n  }\n  /**\n   * 文字避让\n   */\n  private filterGlyphs() {\n    const {\n      padding = [4, 4],\n      textAllowOverlap = false,\n    } = this.layer.getLayerConfig() as IPointTextLayerStyleOptions;\n    if (textAllowOverlap) {\n      this.layer.setEncodedData(this.glyphInfo);\n      return;\n    }\n    this.currentZoom = this.mapService.getZoom();\n    this.extent = this.textExtent();\n    const { width, height } = this.rendererService.getViewportSize();\n    const collisionIndex = new CollisionIndex(width, height);\n    const filterData = this.glyphInfo.filter((feature: IEncodeFeature) => {\n      const { shaping, id = 0 } = feature;\n      const centroid = feature.centroid as [number, number];\n      const size = feature.size as number;\n      const fontScale: number = size / 24;\n      const pixels = this.mapService.lngLatToContainer(centroid);\n      const { box } = collisionIndex.placeCollisionBox({\n        x1: shaping.left * fontScale - padding[0],\n        x2: shaping.right * fontScale + padding[0],\n        y1: shaping.top * fontScale - padding[1],\n        y2: shaping.bottom * fontScale + padding[1],\n        anchorPointX: pixels.x,\n        anchorPointY: pixels.y,\n      });\n      if (box && box.length) {\n        // TODO：featureIndex\n        collisionIndex.insertCollisionBox(box, id);\n        return true;\n      } else {\n        return false;\n      }\n    });\n    this.layer.setEncodedData(filterData);\n  }\n  /**\n   * 初始化文字布局\n   */\n  private initGlyph() {\n    // 1.生成文字纹理\n    this.initTextFont();\n    // 2.生成文字布局\n    this.generateGlyphLayout();\n  }\n  /**\n   * 更新文字纹理\n   */\n  private updateTexture() {\n    const { createTexture2D } = this.rendererService;\n    const { canvas } = this.fontService;\n    this.textureHeight = canvas.height;\n    this.texture = createTexture2D({\n      data: canvas,\n      width: canvas.width,\n      height: canvas.height,\n    });\n  }\n\n  private rebuildModel() {\n    // 避让 anchor,等属性变化时需要重新构建model\n    this.filterGlyphs();\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'pointText',\n        vertexShader: textVert,\n        fragmentShader: textFrag,\n        triangulation: TextTriangulation,\n        depth: { enable: false },\n        blend: this.getBlend(),\n      }),\n    ];\n  }\n}\n"],"file":"text.js"}